ENV['VAGRANT_NO_PARALLEL'] = 'yes'

# number of worker nodes
NODE_COUNT = 2

# number of master node
M_NODE_COUNT = 2

Vagrant.configure("2") do |config|
  config.vm.box = "generic/ubuntu1804"

  config.trigger.before :up do |trigger|
    trigger.info = "Creating 'NATSwitch' Hyper-V switch if it does not exist..."
    trigger.run = {privileged: "true", powershell_elevated_interactive: "true", path: "./scripts/nat-hyperv-switch.ps1"}
  end

  (1..M_NODE_COUNT).each do |i|
    config.vm.define "swarm-master-#{i}" do |master|
  # config.vm.define "swarm-master" do |master|
        master.vm.hostname = "swarm-master-#{i}"
        master.vm.provider :hyperv do |hv, override|
            hv.memory = "2048"
            hv.cpus = "2"
            hv.mac = "00154D11210#{i}"
            hv.vmname = "swarm-master-#{i}"
        end
        master.vm.provision "shell", {
            path: "./scripts/configure-static-ip.sh",
            args: ["192.168.100.3#{i}"]
        }
        master.vm.provision :reload
        master.trigger.before :reload do |trigger|
            trigger.info = "Setting Hyper-V switch to 'NATSwitch' to allow for static IP..."

            trigger.run = {
                privileged: "true",
                powershell_elevated_interactive: "true",
                path: "./scripts/set-hyperv-switch.ps1",
                args: ["swarm-master-#{i}"]
            }
        end

        master.vm.provision "shell", {
            path: "./scripts/bootstrap-tools.sh",
            args: ["#{NODE_COUNT}", "#{M_NODE_COUNT}"]
        }
        master.vm.provision "shell", {
            path: "./scripts/bootstrap-master.sh",
            args: ["#{i}"]
        }
    end
  end

  (1..NODE_COUNT).each do |i|
	config.vm.define "swarm-worker-#{i}" do |worker|
		worker.vm.hostname = "swarm-worker-#{i}"
		worker.vm.provider :hyperv do |hv, override|
			hv.memory = "2048"
			hv.cpus = "2"
			hv.mac = "00154D11211#{i}"
			hv.vmname = "swarm-worker-#{i}"
		end
		worker.vm.provision "shell" do |s|
			s.path = "./scripts/configure-static-ip.sh"
			s.args = ["192.168.100.4#{i}"]
		end
		worker.vm.provision :reload
		worker.trigger.before :reload do |trigger|
		  	trigger.info = "Setting Hyper-V switch to 'NATSwitch' to allow for static IP..."

		  	trigger.run = {
				privileged: "true",
				powershell_elevated_interactive: "true",
				path: "./scripts/set-hyperv-switch.ps1",
				args: ["swarm-worker-#{i}"]
			}
		end

		worker.vm.provision "shell", {
			path: "./scripts/bootstrap-tools.sh",
			args: ["#{NODE_COUNT}", "#{M_NODE_COUNT}"]
		}
  		worker.vm.provision "shell", path: "./scripts/bootstrap-worker.sh"
	end
  end
end
